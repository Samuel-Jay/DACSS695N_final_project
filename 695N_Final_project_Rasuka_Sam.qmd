---
title: "Spotify Artist Feature Collaboration Network Analysis"
subtitle: "DACSS 695N Social Network Analysis"
author: "Rasuka Shrestha/ Samuel Jayachandran"
date: "April 25, 2024"
format: 
  html:
    toc: true
    toc-depth: 2
    toc-title: Contents
    toc-location: left
    code-fold: false
    html-math-method: katex
    theme: flatly
    smooth-scroll: true
    link-external-icon: true
    link-external-newwindow: true
    citations-hover: true
    footnotes-hover: true
    font-size: 80%
editor: visual
---
##Note: modify the research question, specify genres (HP = hiphop & pop) to a different name, 'us' based chart hits, and the year(2022).

# Spotify artist feature collaboration network analysis

## Introduction:

This study is a network analysis that tries to identify, quantify and evaluate the relationship between follower counts of each artist's various collaborators vs the artist's own success in the charts. The presumed hypothesis is that popular artists will probably have many successful chart hits (hence why they're popular), therefore any successful/complete collaboration that another artist has with them for an album is likely to reach very high in an extremely competitive chart ranking.

```{r}
library(moderndive)
library(olsrr)
library(tidyr)
library(tidyverse)
library(sna)
library(igraph)
library(network)
library(infer)
library(intergraph)
library(stringr)
library(readr)
```

These are the necessary packages to do our network analysis.

Charting high in an under-competitive ranking is not the same as ranking high in a highly competitive chart. So rank values should be weighted by the competitiveness. It is logical to assume that a ranking is competitive if: 1) that genre of music is highly popular, 2) the artists are highly popular, 3) due to 1 and 2 there would be a massive influx of many artists to that category/genre and also to that particular chart's song collection.

Assessing the competitiveness in a numerical manner requires another metric involving popularity/follower counts of artists, and number of artists producing music in that genre.

### Caveat:

There is the possibility of high covariance between our Dependent Variable: chart hit score, and the Independent Variable: popularity-weighted degree of collaborations, since both use follower counts as a parameter in their metrics.

#Data cleaning

```{r}
edges <- read_csv("DACSS695N_final_project/edges.csv", show_col_types = FALSE)
edges<- na.omit (edges)
head(edges) #undirected, collaboration between artist A and artist B.

nodes <- read.csv("DACSS695N_final_project/nodes.csv")
nodes <- na.omit (nodes)
head(nodes)

spotifyartistdata <- read.csv("DACSS695N_final_project/spotify_artist_data.csv")
spotifyartistdata <- na.omit (spotifyartistdata)
head(spotifyartistdata)

# filtering 'hiphop' & 'pop', 'en', removing [] and 0.  
HP <- nodes |> #Hiphop Pop
  mutate(genres = gsub("\\[|\\]", "", genres)) |>
  filter(!chart_hits == 0) |>
  filter(str_detect(genres, "hip hop | pop") & str_detect(chart_hits, "us"))
head(HP)
```
#adj matrix id_0=spotify_id, id_1=collab
```{r}
hiphopmerged <- bind_rows(
  merge(edges, HP, by.x = "id_0", by.y = "spotify_id", all.x = TRUE), 
  merge(edges, HP, by.x = "id_1", by.y = "spotify_id", all.x = TRUE)) |>
  distinct(name, .keep_all = TRUE)
head(hiphopmerged) 

hiphopmatrix <- as.matrix(hiphopmerged)
head(hiphopmatrix)
view(hiphopmatrix)
```

## Considerations that were impractical or not possible:

We were unable to get datasets where we could find the time of each collab between any combination of artists. So we cannot analyze temporal changes in relationships.

With greater time, more access to Spotify APIs, we would be able to obtain time of each collaboration using the artists' ids, matching the name of the album/single (that the artists collaborated on) to the year that the particular album/single was released.

Then we could make comparisons between the follower count of each of the artists before and after the collaboration was done.

## calculate metrics for nodes, centrality
```{r}

```


## Graph
```{r}
# Create a graph object from the collaboration data
collab_graph <- graph_from_data_frame(d = HP, directed = FALSE)
head(collab_graph)

# Visualize the collaboration network
plot(collab_graph, vertex.label = V(collab_graph)$name, layout = layout_with_fr)
```

## two mode: artist and song
```{r}

```

## visualization 
```{r}

```

